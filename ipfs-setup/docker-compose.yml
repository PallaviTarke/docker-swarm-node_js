version: '3.9'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
    networks:
      - ipfs-net
    deploy:
      mode: global

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - VITE_BACKEND_URL=http://nginx
    networks:
      - ipfs-net
    deploy:
      mode: global

  nodejs:
    build:
      context: ./nodejs-app
      dockerfile: Dockerfile
    networks:
      - ipfs-net
    ports:
      - "3000"
    deploy:
      mode: replicated
      replicas: 2

  ipfs1:
    image: ipfs/kubo:latest
    volumes:
      - ipfs1-data:/data/ipfs
    networks:
      - ipfs-net
    deploy:
      placement:
        constraints: [node.hostname == ipfs-manager-1]

  ipfs2:
    image: ipfs/kubo:latest
    volumes:
      - ipfs2-data:/data/ipfs
    networks:
      - ipfs-net
    deploy:
      placement:
        constraints: [node.hostname == ipfs-manager-2]

  ipfs3:
    image: ipfs/kubo:latest
    volumes:
      - ipfs3-data:/data/ipfs
    networks:
      - ipfs-net
    deploy:
      placement:
        constraints: [node.hostname == ipfs-manager-3]

  ipfs4:
    image: ipfs/kubo:latest
    volumes:
      - ipfs4-data:/data/ipfs
    networks:
      - ipfs-net
    deploy:
      placement:
        constraints: [node.hostname == ipfs-worker-1]

  ipfs-cluster0:
    image: ipfs/ipfs-cluster:latest
    environment:
      - CLUSTER_SECRET=REPLACE_WITH_YOUR_BASE64_SECRET
    volumes:
      - ./ipfs-cluster/cluster0:/data/ipfs-cluster
    depends_on:
      - ipfs1
    networks:
      - ipfs-net
    deploy:
      placement:
        constraints: [node.hostname == ipfs-manager-1]

  ipfs-cluster1:
    image: ipfs/ipfs-cluster:latest
    environment:
      - CLUSTER_SECRET=REPLACE_WITH_YOUR_BASE64_SECRET
    volumes:
      - ./ipfs-cluster/cluster1:/data/ipfs-cluster
    depends_on:
      - ipfs2
    networks:
      - ipfs-net
    deploy:
      placement:
        constraints: [node.hostname == ipfs-manager-2]

  ipfs-cluster2:
    image: ipfs/ipfs-cluster:latest
    environment:
      - CLUSTER_SECRET=REPLACE_WITH_YOUR_BASE64_SECRET
    volumes:
      - ./ipfs-cluster/cluster2:/data/ipfs-cluster
    depends_on:
      - ipfs3
    networks:
      - ipfs-net
    deploy:
      placement:
        constraints: [node.hostname == ipfs-manager-3]

  ipfs-cluster3:
    image: ipfs/ipfs-cluster:latest
    environment:
      - CLUSTER_SECRET=REPLACE_WITH_YOUR_BASE64_SECRET
    volumes:
      - ./ipfs-cluster/cluster3:/data/ipfs-cluster
    depends_on:
      - ipfs4
    networks:
      - ipfs-net
    deploy:
      placement:
        constraints: [node.hostname == ipfs-worker-1]

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks:
      - ipfs-net

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - ipfs-net

  loki:
    image: grafana/loki:2.9.2
    volumes:
      - ./loki/loki-config.yml:/etc/loki/local-config.yaml:ro
      - loki-data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - ipfs-net

  promtail:
    image: grafana/promtail:2.9.2
    volumes:
      - /var/log:/var/log:ro
      - ./monitoring/promtail-config.yaml:/etc/promtail/promtail.yaml:ro
    command: -config.file=/etc/promtail/promtail.yaml
    networks:
      - ipfs-net

  node-exporter:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    networks:
      - ipfs-net

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.1
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - ipfs-net

  vault:
    image: hashicorp/vault:latest
    ports:
      - "8200:8200"
    cap_add:
      - IPC_LOCK
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: root
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
    networks:
      - ipfs-net

networks:
  ipfs-net:
    driver: overlay

volumes:
  ipfs1-data:
  ipfs2-data:
  ipfs3-data:
  ipfs4-data:
  loki-data:
